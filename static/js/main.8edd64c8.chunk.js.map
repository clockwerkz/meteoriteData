{"version":3,"sources":["Context/MeteorContext.js","helpers/meteorData.js","Components/SearchBar.js","Components/Pagination.js","Components/DataTable.js","Components/SearchType.js","App.js","index.js"],"names":["MeteorContext","createContext","consumer","soda","Consumer","fetchInitialData","page","offset","cb","query","withDataset","order","limit","getRows","on","data","error","console","queryDataStartsWith","searchString","where","concat","toLowerCase","trim","queryDataContains","SearchBar","_useContext","useContext","updateSearch","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","react_default","a","createElement","className","type","value","onChange","e","target","onClick","Pagination","setPage","map","amt","key","id","name","checked","parseInt","htmlFor","DataTable","meteor","recclass","mass","fall","year","slice","geolocation","latitude","longitude","SearchType","updateSearchFilter","App","setData","_useState3","_useState4","_useState5","_useState6","setOffset","_useState7","_useState8","setSearchString","_useState9","_useState10","searchFilter","setSearchFilter","useEffect","Context_MeteorContext","Provider","newSearchString","newSearchFilter","Components_SearchBar","Components_SearchType","Components_Pagination","length","Components_DataTable","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8edd64c8.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst MeteorContext = createContext('Test');\r\n\r\nexport default MeteorContext;","import soda from 'soda-js';\r\n\r\nconst consumer = new soda.Consumer('data.nasa.gov');\r\n\r\nconst fetchInitialData = (page, offset, cb) => {\r\n    consumer.query()\r\n      .withDataset('gh4g-9sfh')\r\n      .order('name ASC')\r\n      .limit(page)\r\n      .offset(offset)\r\n      .getRows()\r\n      .on('success', (data)=> cb(data))\r\n      .on('error', (error)=> console.error(error));\r\n}\r\n\r\n\r\nconst queryDataStartsWith = (page, offset, cb, searchString) => {\r\n  consumer.query()\r\n    .withDataset('gh4g-9sfh')\r\n    .order('name ASC')\r\n    .where(`lower(name) like \"${searchString.toLowerCase().trim()}%\"`)\r\n    .limit(page)\r\n    .offset(offset)\r\n    .getRows()\r\n    .on('success', (data)=> cb(data))\r\n    .on('error', (error)=> console.error(error));\r\n}\r\n\r\nconst queryDataContains = (page, offset, cb, searchString) => {\r\n  consumer.query()\r\n    .withDataset('gh4g-9sfh')\r\n    .order('name ASC')\r\n    .where(`lower(name) like \"%${searchString.toLowerCase().trim()}%\"`)\r\n    .limit(page)\r\n    .offset(offset)\r\n    .getRows()\r\n    .on('success', (data)=> cb(data))\r\n    .on('error', (error)=> console.error(error));\r\n}\r\n\r\nexport { fetchInitialData , queryDataStartsWith, queryDataContains }\r\n","import React, { useState, useContext } from 'react';\r\nimport MeteorContext from '../Context/MeteorContext';\r\n\r\n\r\n\r\nconst SearchBar = () => {\r\n    const { searchString, updateSearch } = useContext(MeteorContext); \r\n    const [search, setSearch] = useState(searchString);\r\n    return ( \r\n       <div className='search-bar--wrapper'>\r\n            <input type='text' className=\"search-bar\" value={search} onChange={(e)=> setSearch(e.target.value)} />\r\n            <button className=\"btn btn--search\" onClick={()=> updateSearch(search)}>Search</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import React, { useContext } from 'react';\r\nimport MeteorContext from '../Context/MeteorContext';\r\n\r\n\r\nconst Pagination = ()=> {\r\n    const values = [10, 20, 50, 100];\r\n    const {page ,setPage} = useContext(MeteorContext); \r\n    return (\r\n      <div className=\"pagination\">\r\n        {values.map(amt=> (\r\n            <div key={amt} className=\"page-return--wrapper\">\r\n                <input \r\n                    type=\"radio\" \r\n                    id=\"{amt}\" \r\n                    name=\"page-return\" \r\n                    value={amt}\r\n                    checked={amt===page}\r\n                    onChange={e=>setPage(parseInt(e.target.value))}\r\n                />\r\n                <label htmlFor=\"{amt}\">{amt}</label>\r\n            </div>\r\n        ))}\r\n        \r\n      </div>  \r\n    )\r\n}\r\n\r\n\r\nexport default Pagination","import React, { useContext } from 'react';\r\nimport MeteorContext from '../Context/MeteorContext';\r\n\r\nconst DataTable = () => {\r\n    const { data } = useContext(MeteorContext);\r\n\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                <th>Name</th>\r\n                <th>Rec Class</th>\r\n                <th>Mass(g)</th>\r\n                <th>Fall</th>\r\n                <th>Year</th>\r\n                <th>Latitude</th>\r\n                <th>Longitude</th>\r\n                </tr>\r\n                { data && data.map(meteor => (\r\n                <tr key={meteor.id}>\r\n                    <td>{meteor.name}</td>\r\n                    <td>{meteor.recclass}</td>\r\n                    <td>{meteor.mass ? (meteor.mass):(\"UNK\")}</td>\r\n                    <td>{meteor.fall}</td>\r\n                    <td>{meteor.year ? (meteor.year.slice(0,4)):(\"UNK\")}</td>\r\n                    {\r\n                        meteor.geolocation ? (<td>{meteor.geolocation.latitude}</td>)\r\n                        : \r\n                        (<td>UNK</td>)\r\n                    }\r\n                    {\r\n                        meteor.geolocation ? (<td>{meteor.geolocation.longitude}</td>)\r\n                        : \r\n                        (<td>UNK</td>)\r\n                    }\r\n                </tr> \r\n                )) }\r\n            </tbody>\r\n        </table>   \r\n    )\r\n}\r\n\r\nexport default DataTable;","import React, { useContext } from 'react';\r\nimport MeteorContext from '../Context/MeteorContext';\r\n\r\nconst SearchType = () => {\r\n\r\n    const {updateSearchFilter } = useContext(MeteorContext);\r\n\r\n    return (\r\n        <div>\r\n            <label htmlFor='SearchType'>Search Options:</label>\r\n            <select name='SearchType' onChange={(e)=> updateSearchFilter(e.target.value)}>\r\n                <option value=\"startsWith\">Starts With</option>\r\n                <option value=\"contains\">Contains</option>\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchType;","import React, { useEffect, useState } from 'react';\r\nimport MeteorContext from './Context/MeteorContext';\r\nimport  {fetchInitialData, queryDataStartsWith, queryDataContains } from './helpers/meteorData';\r\n\r\nimport SearchBar from './Components/SearchBar';\r\nimport Pagination from './Components/Pagination';\r\nimport DataTable from './Components/DataTable';\r\nimport SearchType from './Components/SearchType';\r\nimport './app.css';\r\n\r\n\r\nfunction App() {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [page, setPage] = useState(20);\r\n  const [offset, setOffset] = useState(0);\r\n  const [searchString, setSearchString] = useState('');\r\n  const [searchFilter, setSearchFilter] = useState('startsWith');\r\n\r\n  useEffect(()=> {\r\n    if (searchString) {\r\n      if (searchFilter === 'startsWith') {\r\n        queryDataStartsWith(page, offset, setData, searchString);    \r\n      } else {\r\n        queryDataContains(page, offset, setData, searchString); \r\n      }\r\n    } else {\r\n      fetchInitialData(page, offset, setData);\r\n    }\r\n  }, [searchString, searchFilter, offset, page])\r\n\r\n  const updateSearchFilter = (newSearchFilter)=> {\r\n    setSearchFilter(newSearchFilter);\r\n    setOffset(0);\r\n  }\r\n\r\n  const updateSearch = (newSearchString) => {\r\n    setSearchString(newSearchString);\r\n    setOffset(0);\r\n  }\r\n\r\n  const nextPage = ()=> {\r\n    if (page<=data.length) setOffset(offset+page);\r\n  }\r\n\r\n  const prevPage = ()=> {\r\n    if (offset-page >= 0) {\r\n      setOffset(offset-page)\r\n    } else {\r\n      setOffset(0);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MeteorContext.Provider value={{ data, searchString, updateSearch, searchFilter, updateSearchFilter, page, setPage }}>\r\n      <div className='container'>\r\n        <h1><span>Meteorite</span> Data</h1>\r\n        <SearchBar />\r\n        <div className=\"search-options\">\r\n          <SearchType />\r\n          <Pagination />\r\n        </div>\r\n        {data.length!==0 ? (<DataTable />):(<p>No Meteorite Results Found</p>)}\r\n        <div className=\"btn-page--wrapper\">\r\n          <button className=\"btn btn--page\" onClick={prevPage}>Previous Page</button>\r\n          <button className=\"btn btn--page\" onClick={nextPage}>Next Page</button>\r\n        </div>\r\n      </div>\r\n    </MeteorContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}